name: Run Ginkgo Tests
on:
  push:
    branches:
      - develop
      - main
    tags:
      - v*
  pull_request:
    types: [opened, synchronize, reopened]
  # For manual trigger of workflow
  workflow_dispatch:

jobs:
  setup_environment:
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.get_env.outputs.env }}
    env:
      GITHUB_REF: ${{ github.ref }}
    steps:
      - id: get_env
        run: |
          if grep -q "refs/tags/v" <<< ${{github.ref}} ||  grep -q "refs/heads/main" <<< ${{github.ref}}; then
            echo "env=PROD" >> $GITHUB_OUTPUT
          else
            echo "env=DEV" >> $GITHUB_OUTPUT
          fi
      - id: print_env
        name: Print environment
        run: echo "Environment :- ${{ steps.get_env.outputs.env }}"

  test:
    name: Run Ginkgo Tests
    runs-on: ubuntu-latest
    needs: setup_environment
    environment: ${{needs.setup_environment.outputs.env_name}}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "^1.22"

      - name: Print Go version
        run: go version

      - name: Install Ginkgo CLI
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE testdb;' -uroot -proot
          mysql -e "show databases;" -uroot -proot

      - name: Initialize the environment variables
        run: |
          echo 'ENVIRONMENT=test
          SERVER_PORT=8080
          DB_HOST=localhost
          DB_NAME=testdb
          DB_PASS=root
          DB_PORT=3306
          DB_TYPE=mysql
          DB_USER=root
          DB_FORWARD_PORT=3306
          LOG_LEVEL=debug' > .env

      - name: Install dependencies
        run: go mod download

      - name: Run migrations
        run: |
          curl -sSf https://atlasgo.sh | sh
          make migrate-apply

      - name: Run Ginkgo tests
        run: |
          ginkgo -v --cover -r ./domain/... ./pkg/...

      - name: Slack Notification on SUCCESS
        if: success()
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: Ginkgo tests have passed successfully :white_check_mark:.
          attachments: |
            [
              {
                "color": "good",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "Commit Message",
                    "value": "${{ github.event.head_commit.message }}"
                  },
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Compare URL",
                    "value": "${{ github.event.compare }}"
                  },
                  {
                    "title": "ENV",
                    "value": "${{needs.setup_environment.outputs.env_name}}"
                  }
                ]
              }
            ]

      - name: Slack Notification on FAILURE
        if: failure()
        uses: tokorom/action-slack-incoming-webhook@main
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          text: Ginkgo tests have failed :x:.
          attachments: |
            [
              {
                "color": "danger",
                "author_name": "${{ github.actor }}",
                "author_icon": "${{ github.event.sender.avatar_url }}",
                "fields": [
                  {
                    "title": "Commit Message",
                    "value": "${{ github.event.head_commit.message }}"
                  },
                  {
                    "title": "GitHub Actions URL",
                    "value": "${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"
                  },
                  {
                    "title": "Compare URL",
                    "value": "${{ github.event.compare }}"
                  },
                  {
                    "title": "ENV",
                    "value": "${{needs.setup_environment.outputs.env_name}}"
                  }
                ]
              }
            ]
